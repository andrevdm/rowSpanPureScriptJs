{"version":3,"sources":["babel/demo.js"],"names":["createStore","Redux","combineReducers","Component","React","Provider","ReactRedux","dispatchRefreshData","store","dispatch","type","dispatchUpdateData","data","mainReducer","state","action","setTimeout","year","months","month","days","day","chainReducers","R","reduce","a","r","reducers","dashReducers","dashApp","DemoComponent","daysInYear","flatten","map","m","y","rows","rowId","d","cols","val","span","length","collapsed","collapseTableArray","c","DemoContainer","getState","startApp","render","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"demo.js","sourcesContent":["\"use strict\";\nconst createStore = Redux.createStore;\nconst combineReducers = Redux.combineReducers;\nconst Component = React.Component;\nconst Provider = ReactRedux.Provider;\n\nconst dispatchRefreshData = (store) => store.dispatch( {type: \"DATA_REFRESH\", store} );\nconst dispatchUpdateData = (store, data) => store.dispatch( {type: \"DATA_UPDATE\", store, data} );\n\nconst mainReducer = (state = {}, action) => {\n  switch( action.type ){\n    case \"DATA_REFRESH\":{\n      //This would usually be a AJAX call with the dispatchUpdate happening in the success function\n      setTimeout( () => {\n        const data = [{year:2016,\n                       months:[{month:11,\n                                days:[{day:30},\n                                      {day:10}\n                                     ]\n                               }\n                               ,{month:2,\n                                 days:[{day:15},\n                                       {day:3},\n                                       {day:1}\n                                      ]\n                                }\n                              ]\n                      }\n                      ,{year:2015,\n                        months:[{month:5,\n                                 days:[{day:20},\n                                       {day:17}\n                                      ]\n                                }\n                               ]\n                       }\n                     ];\n\n        dispatchUpdateData( action.store, data );\n      },\n      10 );\n\n      return state;\n    }\n\n    case \"DATA_UPDATE\":{\n      return {\n        ...state,\n        data: action.data\n      };\n    }\n    \n    default:{\n      return state;\n    }\n  }\n};\n\nconst chainReducers = reducers => {\n  return (state,action) => {\n    return R.reduce( (a,r) => r(a, action), state, reducers );\n  };\n}\n\nconst dashReducers = chainReducers( [mainReducer] );\nconst dashApp = dashReducers;\n\n\n//--------------------------------------------------------------------------------------------\n// Presentational components\n//--------------------------------------------------------------------------------------------\nconst DemoComponent = ({data = []}) => {\n  const daysInYear = y => R.flatten( R.map( m => m.days, y.months ) );\n  \n  const rows = R.flatten( R.map(\n    y => R.map(\n      m => R.map(\n        d => ({rowId: y.year + \".\" + m.month + \".\" + d.day,\n               cols:[{val: y.year,  span: daysInYear(y).length}\n                    ,{val: m.month, span: m.days.length} \n                    ,{val: d.day,   span: 1}        \n                    ]\n              }),\n        m.days ),\n      y.months ),\n    data )\n  );\n\n  var collapsed = collapseTableArray( rows );\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th>Year</th>\n            <th>Month</th>\n            <th>Day</th>\n          </tr>\n        </thead>\n        <tbody>\n          {R.map( r => (<tr key={r.rowId}>\n                         {R.map( c => (<td rowSpan={c.span} key={r.rowId + \".\" + c.val}>\n                                         {c.val}\n                                       </td>),\n                                 r.cols )}\n                        </tr>),\n                  collapsed )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n//--------------------------------------------------------------------------------------------\n\n\n//--------------------------------------------------------------------------------------------\n// Container components\n//--------------------------------------------------------------------------------------------\nconst DemoContainer = ({store}) => {\n  const state = store.getState();\n  \n  return (\n    <DemoComponent data={state.data} />\n  );\n}\n//--------------------------------------------------------------------------------------------\n\nconst startApp = () => {\n  const store = createStore(dashApp);\n\n  const render = () => {\n    return ReactDOM.render(\n        <span>\n          <h1>Demo</h1>\n\n          <DemoContainer\n            store={store} />\n        </span>,\n      document.getElementById(\"root\")\n    );\n  };\n\n  dispatchRefreshData(store);\n  store.subscribe(render);\n  render();\n}\n\nstartApp();\n"]}